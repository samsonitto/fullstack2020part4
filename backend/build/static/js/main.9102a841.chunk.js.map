{"version":3,"sources":["components/Header.js","components/Input.js","components/Header2.js","components/Filter.js","components/Button.js","components/AddNewBlog.js","components/Togglable.js","components/Blogs.js","services/blogs.js","components/Notification.js","components/LoginForm.js","services/login.js","App.js","index.js"],"names":["Header","props","text","Input","type","placeholder","onChange","handleOnChange","id","value","name","Header2","Filter","handleFilterOnChange","Button","onClick","handleClick","AddNewBlog","createBlog","showMessage","useState","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","e","target","preventDefault","title","author","url","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenHidden","toggleVisibility","useImperativeHandle","style","buttonLabel","children","buttonHideLabel","Blogs","blogs","map","blog","i","key","likes","handleLikeClick","user","username","handleDeleteClick","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","updatedObject","put","deleteBlog","delete","setToken","newToken","Notification","message","notClassName","className","LoginForm","onSubmit","handleLogin","setUsername","password","setPassword","login","credentials","App","setBlogs","setNewLike","sort","b","blogsToShow","setBlogsToShow","setMessage","notClass","setNotClass","setUser","useEffect","blogService","initialBlogs","console","log","catch","error","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","handleAddClick","blogObject","blogFormRef","current","newBlog","concat","savedBlog","resetForm","confirm","filter","document","getElementById","msg","msgClass","setTimeout","createRef","clear","filtered","toLowerCase","includes","undefined","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9102a841.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <h1>{props.text}</h1>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={props.handleOnChange}\r\n            id={props.id}\r\n            value={props.value}\r\n            name={props.name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Header2 = (props) => {\r\n    return (\r\n        <h2>{props.text}</h2>\r\n    )\r\n}\r\n\r\nexport default Header2","import React from 'react'\r\nimport Input from './Input'\r\nimport Header2 from './Header2'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n        <Header2 text={'Search'} />\r\n        Filter by Name: <Input placeholder={'Name..'} handleOnChange={props.handleFilterOnChange} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button \r\n            onClick={props.handleClick}\r\n            type={props.type}\r\n        >\r\n            {props.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState } from \"react\";\r\nimport Input from './Input';\r\nimport Button from './Button';\r\nimport Header2 from './Header2';\r\n\r\nconst AddNewBlog = ({ createBlog, showMessage }) => {\r\n  const [ newTitle, setNewTitle ] = useState('')\r\n  const [ newAuthor, setNewAuthor ] = useState('')\r\n  const [ newUrl, setNewUrl ] = useState('')\r\n\r\n  const handleAddTitleOnChange = (e) => {\r\n    setNewTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddAuthorOnChange = (e) => {\r\n    setNewAuthor(e.target.value)\r\n  }\r\n\r\n  const handleAddUrlOnChange = (e) => {\r\n    setNewUrl(e.target.value)\r\n  }\r\n\r\n  const addBlog = (e) => {\r\n    e.preventDefault()\r\n    if(newTitle === '') {\r\n      showMessage('Input title', 'error')\r\n    }\r\n    else if (newAuthor === '') {\r\n      showMessage('Input author', 'error')\r\n    }\r\n    else if (newUrl === '') {\r\n      showMessage('Input url', 'error')\r\n    } else {\r\n      createBlog({\r\n        title: newTitle,\r\n        author: newAuthor,\r\n        url: newUrl,\r\n      })\r\n\r\n      setNewTitle('')\r\n      setNewAuthor('')\r\n      setNewUrl('')\r\n    }\r\n  }\r\n    return (\r\n        <>\r\n            <Header2 text={'Add New Blog'} />\r\n            <form>\r\n                <div>\r\n                    Title: <Input placeholder={'Title..'} handleOnChange={handleAddTitleOnChange} id={'titleInput0'} /><br />\r\n                    Author: <Input placeholder={'Author..'} handleOnChange={handleAddAuthorOnChange} id={'authorInput0'} /><br />\r\n                    Url: <Input placeholder={'Url..'} handleOnChange={handleAddUrlOnChange} id={'urlInput0'} />\r\n                </div>\r\n                <div>\r\n                    <Button type={'submit'} handleClick={addBlog} text={'Add'} />\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddNewBlog","import React, { useState, useImperativeHandle } from 'react'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [ visible, setVisible ] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenHidden = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button handleClick={toggleVisibility} text={props.buttonLabel} />\r\n      </div>\r\n      <div style={showWhenHidden}>\r\n        {props.children}\r\n        <Button handleClick={toggleVisibility} text={props.buttonHideLabel} />\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n  buttonHideLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React from 'react';\r\nimport Header2 from './Header2';\r\nimport Button from './Button';\r\nimport Togglable from './Togglable';\r\n\r\nconst Blogs = (props) => {\r\n    return (\r\n        <>\r\n          <Header2 text={'Blogs'} />\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Info</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.blogs.map((blog, i) => \r\n                <>\r\n                  <tr id={blog.id} key={blog.id}>\r\n                    <td>{blog.title}</td>\r\n                    <td>\r\n                      <Togglable buttonLabel={'View'} buttonHideLabel={'Hide Info'}>\r\n                        <div>\r\n                          <p>Author: {blog.author}</p>\r\n                          <p>URL: {blog.url}</p>\r\n                          <p>Likes: {blog.likes} <Button text='like' handleClick={() => props.handleLikeClick(blog)} /></p>\r\n                          {blog.user ? <p>Added by: {blog.user.name}</p> : ''}\r\n                          {blog.user ? (props.user.username === blog.user.username ? <Button text='Delete Blog' handleClick={() => props.handleDeleteClick(blog.id, blog.title)} /> : '') : ''}\r\n                        </div>\r\n                      </Togglable>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                </>\r\n              )}\r\n            </tbody>\r\n            \r\n          </table>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Blogs","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = (updatedObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updatedObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteBlog = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then(response => response)\r\n}\r\n\r\nexport default { getAll, create, update, deleteBlog, setToken }","import React from 'react'\r\n\r\nconst Notification = ({ message, notClassName }) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n    return (\r\n        <div className={notClassName}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = (props) => (\r\n  <form onSubmit={props.handleLogin}>\r\n    <div>\r\n      username\r\n      <Input\r\n        type=\"text\"\r\n        value={props.username}\r\n        name=\"Username\"\r\n        handleOnChange={({ target }) => props.setUsername(target.value)}\r\n      />\r\n    </div>\r\n    <div>\r\n      password\r\n      <Input\r\n        type=\"password\"\r\n        value={props.password}\r\n        name=\"Password\"\r\n        handleOnChange={({ target }) => props.setPassword(target.value)}\r\n      />\r\n    </div>\r\n    <Button type=\"submit\" text=\"Login\" />\r\n  </form>      \r\n)\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Filter from './components/Filter'\nimport AddNewBlog from './components/AddNewBlog'\nimport Blogs from './components/Blogs'\nimport blogService from './services/blogs'\nimport Notification from './components/Notification'\nimport Button from './components/Button'\nimport LoginForm from './components/LoginForm'\nimport loginService from './services/login'\nimport './App.css'\nimport Togglable from './components/Togglable'\n\n\n\nconst App = () => {\n  const [ blogs, setBlogs] = useState([])\n  const [ newLike, setNewLike ] = useState('')\n  const [ blogsToShow, setBlogsToShow] = useState(blogs.sort((a, b) => (a.likes < b.likes ? 1 : -1)))\n  const [ message, setMessage] = useState(null)\n  const [ notClass, setNotClass] = useState(null)\n  const [ username, setUsername ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const [ user, setUser ] = useState(null)\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs => {\n        setBlogs(initialBlogs)\n        console.log(initialBlogs)\n        setBlogsToShow(initialBlogs)\n      })\n      .catch(error => {\n        showMessage(`Error caught: ${error}`, 'error')\n      })\n    \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n      console.log(user)\n      \n    }\n  }, [])\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      showMessage('wrong credentials', 'error')\n    }\n  }\n\n  const handleLogout = () => {\n    console.log('logging out')\n    setUser(null)\n    window.localStorage.clear()\n  }\n  \n\n  const handleAddClick = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      const newBlog = await blogService.create(blogObject)\n      setBlogs(blogs.concat(newBlog.savedBlog))\n      setBlogsToShow(blogs.concat(newBlog.savedBlog))\n      showMessage(`Added ${newBlog.savedBlog.title}`, 'success')\n      resetForm()\n      \n    } catch (error) {\n      showMessage(error, 'error')\n    }\n\n  }\n\n  const handleDeleteClick = async (id, title) => {\n    let message = `Do you really want to delete ${title}?`\n    if(window.confirm(message)){\n      try {\n        const deletedBlog = await blogService.deleteBlog(id)\n        \n        setBlogs(blogs.filter(b => b.id !== id))\n        setBlogsToShow(blogs.filter(b => b.id !== id))\n        showMessage(`The \"${title}\" blog has beed deleted`, 'neutral')\n      } catch (error) {\n        showMessage(error, 'error')\n      }\n    }\n  }\n\n  const handleLikeClick = (blog) => {\n\n    console.log(blog)\n    \n    const updatedObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes += 1,\n      user: blog.user ? blog.user.id : undefined,\n    }    \n\n    blogService\n      .update(updatedObject, blog.id)\n      .then(() => {\n        setBlogs(blogs)\n        showMessage(`You liked ${updatedObject.title}`, 'success')\n      })\n      .catch(error => {\n        showMessage(error, 'error')\n      })\n  }\n\n  const resetForm = () => {\n    setNewLike('')\n    document.getElementById('titleInput0').value = ''\n    document.getElementById('authorInput0').value = ''\n    document.getElementById('urlInput0').value = ''\n  }\n\n  const showMessage = (msg, msgClass) => {\n    setMessage(msg)\n    setNotClass(msgClass)\n    setTimeout(() => {\n      setMessage(null)\n      setNotClass(null)\n    }, 5000)\n  }\n\n  const handleFilterOnChange = (e) => {\n    const filtered = blogs.filter(blog => blog.title.toLowerCase().includes(e.target.value.toLowerCase()))\n    setBlogsToShow(filtered)\n  }\n\n  const blogFormRef = React.createRef()\n\n  if (user === null) {\n    return (\n      <div>\n        <Header text={'Bloglist'} />\n        <Notification message={message} notClassName={notClass} />\n        <Togglable buttonLabel={'Login'} buttonHideLabel={'Cancel'}>\n          <LoginForm \n            handleLogin={handleLogin}\n            username={username}\n            setUsername={setUsername} \n            password={password}\n            setPassword={setPassword}\n          />\n        </Togglable>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Header text={'Bloglist'} />\n      <Notification message={message} notClassName={notClass} />\n      <p>{user.name} logged in</p><Button text={\"logout\"} handleClick={handleLogout} />\n      <Togglable ref={blogFormRef} buttonHideLabel={'Cancel'}>\n        <AddNewBlog \n          createBlog={handleAddClick}\n          showMessage={showMessage}\n        />\n      </Togglable>\n      <Filter handleFilterOnChange={handleFilterOnChange} />\n    \n      <Blogs blogs={blogsToShow} handleDeleteClick={handleDeleteClick} handleLikeClick={handleLikeClick} user={user} />      \n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}